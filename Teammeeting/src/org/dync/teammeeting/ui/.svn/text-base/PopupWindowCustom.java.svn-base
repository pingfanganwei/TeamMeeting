package org.dync.teammeeting.ui;

import org.dync.teammeeting.R;
import org.dync.teammeeting.utils.ScreenUtils;

import android.content.Context;
import android.graphics.Color;
import android.graphics.drawable.ColorDrawable;
import android.util.Log;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.Button;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import android.widget.PopupWindow;
import android.widget.TextView;

public class PopupWindowCustom {
	
	private Context mContext;
	private PopupWindow mWindow;
	private LinearLayout mContentView;
	private ImageButton  mClosePopup,mInviteMessagePopup,mInviteWeixinPopup;
	private TextView     mCopyLinkText;
	private Button       mCopyLinkButton;
	private OnPopupWindowClickListener mOnListener;
	
	public PopupWindowCustom(Context context,View btnView ,View topbar,
			OnPopupWindowClickListener listener) {
		// TODO Auto-generated constructor stub
		mContext = context;
		mOnListener  = listener;
		inintView();
		layoutPopup(btnView ,topbar);
	}

	
	
	public interface  OnPopupWindowClickListener {
		
		public void onPopupClickListener(View view);
	}
	
	
	
	private void layoutPopup(View btnView ,View topbar){
		
		// 设置宽度
		int screenWidth = ScreenUtils.getScreenWidth(mContext);
		int popupWidth =  screenWidth - btnView.getWidth();
		// 设置高
		int screenHeight = ScreenUtils.getScreenHeight(mContext);
		int[] location = new int[2];
		btnView.getLocationOnScreen(location);
		int btn_weight = btnView.getWidth() / 2;
		int locationY = location[1] + btn_weight;
		int popupheight = screenHeight - (locationY * 2);

		mWindow = new PopupWindow(mContext);
		
		// 根据设置距离顶部的宽高
		final float density = mContext.getResources().getDisplayMetrics().density;
		int marginTop = (int) (110 * density);
		mWindow.setHeight(popupheight - marginTop);
		mWindow.setWidth(popupWidth);
		mWindow.setContentView(mContentView);
		mWindow.setFocusable(true); // 设置PopupWindow可获得焦点
		mWindow.setTouchable(true); // 设置PopupWindow可触摸
		mWindow.setOutsideTouchable(true); // 设置非PopupWindow区域可触摸
		mWindow.setBackgroundDrawable(new ColorDrawable(Color.TRANSPARENT));
		mWindow.setAnimationStyle(R.style.popwin_anim_style);
		mWindow.showAsDropDown(topbar, btn_weight, btn_weight/2);
	}
	
	private void inintView(){
		
		mContentView = (LinearLayout) View.inflate(mContext, R.layout.popup_layout,
				null);
		mClosePopup = (ImageButton) mContentView.findViewById(R.id.ibtn_close);
		mInviteMessagePopup = (ImageButton) mContentView.findViewById(R.id.ibtn_message);
		mInviteWeixinPopup = (ImageButton) mContentView.findViewById(R.id.ibtn_weixin);
		mCopyLinkText = (TextView) mContentView.findViewById(R.id.tv_copy);
		mCopyLinkButton =  (Button) mContentView.findViewById(R.id.btn_copy);
		
		mClosePopup.setOnClickListener(mOnClickListener);
		mInviteMessagePopup.setOnClickListener(mOnClickListener);
		mInviteWeixinPopup.setOnClickListener(mOnClickListener);
		mCopyLinkButton.setOnClickListener(mOnClickListener);
		mCopyLinkText.setOnClickListener(mOnClickListener);
	}
	
	
	
	private OnClickListener mOnClickListener = new OnClickListener() {
		
		@Override
		public void onClick(View view) {
			// TODO Auto-generated method stub
			mOnListener.onPopupClickListener(view);
		}
	};
	
	
	
	/**
	 * Dismiss the popup window.
	 */
	public void dismiss() {
		mWindow.dismiss();
	}
	

}
